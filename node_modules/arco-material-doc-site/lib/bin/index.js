#!/usr/bin/env node
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const axios_1 = __importDefault(require("axios"));
const commander_1 = __importDefault(require("commander"));
const webpack_1 = require("webpack");
const webpack_dev_server_1 = __importDefault(require("webpack-dev-server"));
const arco_cli_dev_utils_1 = require("arco-cli-dev-utils");
const html_webpack_plugin_1 = __importDefault(require("html-webpack-plugin"));
const locale_1 = __importDefault(require("../locale"));
const getMainConfig_1 = __importDefault(require("../utils/getMainConfig"));
const webpackCallback_1 = __importDefault(require("../utils/webpackCallback"));
const generateEntryFiles_1 = __importStar(require("../utils/generateEntryFiles"));
const webpack_config_1 = require("../config/webpack.config");
// Makes the script crash on unhandled rejections instead of silently
// ignoring them. In the future, promise rejections that are not handled will
// terminate the Node.js process with a non-zero exit code.
process.on('unhandledRejection', (err) => {
    throw err;
});
const VALID_SUBCOMMANDS = ['build', 'dev'];
const URL_HTML_TEMPLATE = `http://${process.env.HTML_TEMPLATE_DOMAIN ||
    'lf-cdn-tos.bytescm.com/obj/static/arco-design/material/platform-dev'}/team.development.html`;
commander_1.default
    .name('arco-doc-site')
    .usage('[commands] [options]')
    .arguments('<cmd>')
    .action((cmd) => {
    if (VALID_SUBCOMMANDS.indexOf(cmd) === -1) {
        arco_cli_dev_utils_1.print.error('[arco-doc-site]', 'Invalid command...');
        commander_1.default.help();
    }
});
commander_1.default
    .command('build')
    .description('build site for production')
    .action(() => {
    (0, generateEntryFiles_1.default)();
    (0, webpack_1.webpack)(webpack_config_1.prod, webpackCallback_1.default);
});
commander_1.default
    .command('dev')
    .description('dev mode')
    .option('-l, --language [language]', locale_1.default.TIP_DEV_OPTION_LANGUAGE)
    .action(({ language }) => __awaiter(void 0, void 0, void 0, function* () {
    // Re-generate entry files
    // TODO watch file add/remove
    (0, generateEntryFiles_1.default)();
    if (!language) {
        const { site: { languages }, } = (0, getMainConfig_1.default)();
        language = languages[0];
    }
    // Set dev entry for webpack config
    try {
        const { data: htmlTemplate } = yield axios_1.default.get(URL_HTML_TEMPLATE);
        webpack_config_1.dev.entry = {
            [language]: (0, generateEntryFiles_1.getPathEntryByLanguage)(language),
        };
        webpack_config_1.dev.plugins.push(new html_webpack_plugin_1.default({
            templateContent: htmlTemplate,
            filename: 'index.html',
            chunks: [language],
        }));
    }
    catch (error) {
        arco_cli_dev_utils_1.print.error('[arco-doc-site]', `Failed to get HTML template from ${URL_HTML_TEMPLATE}`);
        console.error(error);
        return;
    }
    const compiler = (0, webpack_1.webpack)(webpack_config_1.dev);
    const devSeverOptions = Object.assign({}, webpack_config_1.dev.devServer);
    const server = new webpack_dev_server_1.default(devSeverOptions, compiler);
    server.start();
}));
commander_1.default.parse(process.argv);
